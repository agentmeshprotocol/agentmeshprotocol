name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-python-dependencies:
    name: Update Python Dependencies
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools

    - name: Update requirements
      run: |
        # Update main requirements
        if [ -f "requirements.in" ]; then
          pip-compile --upgrade requirements.in
        fi
        
        # Update dev requirements
        if [ -f "requirements-dev.in" ]; then
          pip-compile --upgrade requirements-dev.in
        fi

    - name: Check for security vulnerabilities
      run: |
        pip install safety
        safety check --json || echo "Security check completed with warnings"

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "chore: update Python dependencies"
        title: "ðŸ”„ Automated Python dependency updates"
        body: |
          ## Automated Dependency Updates
          
          This PR contains automated updates to Python dependencies.
          
          ### Changes
          - Updated all Python dependencies to latest compatible versions
          - Ran security check with `safety`
          
          ### Testing
          Please ensure CI passes before merging.
          
          ### Security Notes
          Review any security-related dependency updates carefully.
          
          ---
          *This PR was created automatically by the dependency update workflow.*
        branch: dependency-updates/python
        delete-branch: true
        labels: |
          dependencies
          automated
          python

  update-github-actions:
    name: Update GitHub Actions
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Update GitHub Actions versions
      uses: docker://renovate/renovate:latest
      env:
        RENOVATE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RENOVATE_REPOSITORIES: ${{ github.repository }}
        RENOVATE_CONFIG: |
          {
            "extends": ["config:base"],
            "enabledManagers": ["github-actions"],
            "rangeStrategy": "pin",
            "prHourlyLimit": 2,
            "branchPrefix": "dependency-updates/github-actions/",
            "commitMessagePrefix": "chore: ",
            "labels": ["dependencies", "automated", "github-actions"]
          }

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: [update-python-dependencies]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt

    - name: Run bandit security check
      run: |
        bandit -r src/ -f json -o bandit-report.json || true

    - name: Run semgrep security scan
      uses: semgrep/semgrep-action@v1
      with:
        config: >-
          p/security-audit
          p/secrets
          p/python
        generateSarif: "1"

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: semgrep.sarif
      if: always()

    - name: Create security issue on vulnerabilities
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ Security vulnerabilities detected in dependencies',
            body: `Security scan detected vulnerabilities in project dependencies.
            
            **Action Required:**
            1. Review the security scan results
            2. Update vulnerable dependencies
            3. Test the updates thoroughly
            
            **Scan Details:**
            - Workflow: ${context.workflow}
            - Run ID: ${context.runId}
            - Commit: ${context.sha}
            
            Please address these issues promptly.`,
            labels: ['security', 'high-priority', 'dependencies']
          })